{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template EC2 : Create a EC2 instance with basic setting",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "EC2Name" : {
	"Description" : "Name of EC2 instances",
	"Type" : "String",
	"MinLength": "1",
	"MaxLength": "64",
	"ConstraintDescription" : "Can contain only alphanumeric characters, spaces, dashes and underscores."
    },
   
    "InstanceType" : {
      "Description" : "EC2Instance EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m3.medium", "m3.xlarge", "m3.large", "c3.large", "c3.xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
},

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
	  "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
	  "m3.medium"	: { "Arch" : "64" },
	  "m3.large"	: { "Arch" : "64" },
	  "m3.xlarge"	: { "Arch" : "64" },
      "c3.large"    : { "Arch" : "64" },
	  "c3.xlarge"   : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-west-1"      : { "32" : "ami-951945d0", "64" : "ami-ebdfd6ae" }
    }
},

  "Resources" : {
  
    "EIP": {
    	"Type" : "AWS::EC2::EIP",
   	"Properties" : {
      	"InstanceId" : { "Ref" : "EC2Instance" },
      	"Domain" : "vpc"
   }
   },
  
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",

	  "Metadata" : {
        "Comment" : "Configure the bootstrap helpers to install the httpd, nginx, php",

        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "mysql"        : [],
                "mysql-libs"   : [],
                "httpd"        : [],
                "php"          : [],
                "php-mysql"    : [],
				"nginx"		   : []
              }
            },
			
			"services" : {
              "sysvinit" : {
                "httpd" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"
                },
				"nginx" : {
				  "enable"		  : "true",
				  "ensureRunning" : "true"
				}
              }
			},
			
			"files" : {
			   "/etc/nginx/conf.d/nginx_ex.conf" : {
			       "source" : "https://s3-us-west-1.amazonaws.com/long/nginx_ex.conf"
			   }			
			}
		 } 
        }
      },
	  
      "Properties": {
        "ImageId" : 		{ "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
								{ "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : 	{ "Ref" : "InstanceType" },
        "SecurityGroupIds" : [ {"Ref" : "EC2InstanceSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "SubnetId" : 		"subnet-5966561f",
		"Tags" : 			[ { "Key" : "Name", "Value" : { "Ref" : "EC2Name" } } ],
		"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
		 
          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r EC2Instance ",
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n"
		  ]]}}
      }
    },

    "EC2InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
		  {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ],
        "VpcId" : "vpc-f4f2e896",
	  "Tags" : [ { "Key" : "Name", "Value" : "Test_cf"} ]
      }
    }
},

  "Outputs" : {
    "PublicIp" : {
      "Value" : { "Fn::Join" : ["", [{ "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ]}]] },
      "Description" : "EIP for newly created EC2 Instance"
    }
  }
}:::
